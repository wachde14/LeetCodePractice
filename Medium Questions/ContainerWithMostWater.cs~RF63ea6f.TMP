using System;
using NUnit.Framework;

namespace Medium_Questions
{
    /// <summary>
    /// Given n non-negative integers a1, a2, ..., an , where each represents a point
    /// at coordinate (i, ai). n vertical lines are drawn such that the two endpoints
    /// of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis
    /// forms a container, such that the container contains the most water.
    /// Note: You may not slant the container and n is at least 2.
    /// </summary>
    class ContainerWithMostWater
    {
        public int MaxAreaInefficient(int[] heights)
        {
            int maximumArea = 0;
            for (int i = 0; i < heights.Length; i++)
            {
                for (int j = i + 1; j < heights.Length; j++)
                {
                    int currArea = Math.Min(heights[i], heights[j]) * (j - i);
                }
            }
        }
    }

    [TestFixture]
    class JewelsAndStonesTests
    {
        readonly ContainerWithMostWater _practice = new ContainerWithMostWater();

        [TestCase(new int[] { 1, 2, 3, 4 }, 49)]
        public void GetJewelsCount_WithTestCases_ShouldReturnExpected(int[] inputHeights, int expected)
        {
            int result = _practice.MaxAreaInefficient(inputHeights);

            Assert.AreEqual(expected, result);
        }
    }
}
